#!/bin/bash

TimeStamp() 
{ 
date +'%Y/%m/%d-%H:%M:%S|'
}

FILENAME=/opt/sybase/scripts/server.ini
DBPATH=/opt/sybase/servers
IQSERVER=`basename $0 |sed -e 's/_listener.*//'`
Interface_file=$SYBASE/interfaces
LOGFILE=/opt/sybase/scripts/log/${IQSERVER}_listener_check-`date +'%Y%m%d-%H%M%S'`

for i in `cat $SYBASE/interfaces|grep IQ| xargs`
do
	dbping -q -c dsn=${i} > /dev/null 2>&1
	if [ $? == 0 ];then
		ACT_NODE=$i
		CORD=$(dbisql -c dsn=${i} "select server_name from sp_iqmpxinfo() where role='coordinator'"|head -3|tail -1)
		#echo -e "\e[32m$(TimeStamp) $CORD is the Coordinator Server\e[0m" >> $LOGFILE
		break
	fi
done

while getopts c:l:f:t:g: arg; do
	case $arg in
		c) command=$OPTARG;;
		l) LSName=$OPTARG;;
		f) from=$OPTARG;;
		t) to=$OPTARG;;
		?) exit;;
	esac
done

list_listeners()
{
dbisql -c dsn=$ACT_NODE -nogui "select * from p_get_mpx_status()"|head -n -2
dbisql -c dsn=$ACT_NODE -nogui "select * from p_get_lsmembers() where server_name not like 'LOGICAL COORDINATOR'"|head -n -2
exit
}

everythinglooksfine()
{
        host=$(echo ${LS_Name[$i] ::-5})
        port=$(echo ${LS_Name[$i]}|tail -c 5)
        DB_server=$(dbisql -c dsn=$i -host $host -port $port -nogui "select @@servername"|head -3|tail -1)
        echo -e  "$(TimeStamp) $i logical server is listening to $DB_server"
}


check_listener()
{
eval declare -A LS_Name=( $(awk 'BEGIN{RS="";FS"\n"} {a1=$1;a2=$2;a3=$3;print $1 "=\"" $2" " $3"\" "}' $FILENAME |tr -d '\n'))
for i in "${!LS_Name[@]}"
do
        nc -zv ${LS_Name[$i]} > /dev/null 2>&1
        if [ $? == 0 ]; then
                ls_members=$logical_server
                everythinglooksfine
        else
                echo -e "\e[31m$(TimeStamp) $i logical server is not listening\e[0m"
        fi
done
exit
}

move_listener()
{
if [ -z $LSName ]; then echo "Logical Server name is not specified" && exit; fi
if [ -z $from ]; then echo "Source is not specified" && exit; fi
if [ -z $to ]; then echo "Target is not specified" && exit; fi

eval declare -A LS=( $(awk 'BEGIN{RS="";FS"\n"} {a1=$1;a2=$2;a3=$3;print $1 "=\"" $2" " $3"\" "}' $FILENAME |tr -d '\n'))
VIPHostName=$(echo ${LS[$LSName] ::-5})
Port=$(echo ${LS[$LSName]}|tail -c 5)
IP=`ping -c 1 $VIPHostName | egrep PING | awk {'print $3'}|sed 's/(//g;s/)//g'`

echo -e "$(TimeStamp) Stopping listener on $from" 
dbisql -c dsn=$from -nogui -onerror exit "sp_stop_listener 'tcpip','$IP:$Port'" 
if [ $? == 0 ]; then 
	echo "$(TimeStamp) Stopped listener on $from" 
else
	echo "$(TimeStamp) Failed to Stop listener on $from" 
fi

Host=`cat $Interface_file|grep -A1 $to | awk '{print $4}'|tail -1`
RGName=$(read_line $LSName 3)
if [ $Host != `ssh -q -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" sybase@$VIPHostName hostname` ]; then 
	sudo pcs resource move $RGName $Host --wait=60 > /dev/null  2>&1
	sudo pcs resource cleanup $RGName > /dev/null  2>&1
fi

echo -e "$(TimeStamp) Starting listener on $to" 
dbisql -c dsn=$to -nogui -onerror exit "sp_start_listener 'tcpip','$IP:$Port'"
nc -zv ${LS[$LSName]} > /dev/null 2>&1
if [ $? == 0 ]; then echo "$(TimeStamp) Listener $LSName moved to $to successfully"; fi
exit
}

read_line()
{
SEARCHSTRING=$1
L=$2
ReadLine=`awk 'BEGIN{RS="[";FS="]\n"} $1 ~/('$SEARCHSTRING')/ {print $2}' $FILENAME|sed -n ''${L}p''`
echo $ReadLine
}

case $command in
	status) check_listener;;
	move) move_listener;;
        list) list_listeners;;
	?) exit;;
esac

startlistener()
{
	echo -e "$(TimeStamp) $i logical server is not listening" >> $LOGFILE
	IFS=' ' read -r -a ls_members <<< "$LS"
	echo -e "$(TimeStamp) The members of logical server $i are ${ls_members[@]}" >> $LOGFILE
	for j in ${ls_members[@]}
		do
		dbping -q -c dsn=$j > /dev/null  2>&1
		if [ $? == 0 ]; then
			Host=`cat $Interface_file|grep -A1 $j | awk '{print $4}'|tail -1`
			RGName=$(read_line $i 3)
			VIPHostName=$(echo ${LS_Name[$i] ::-5})
			if [ $Host != `ssh -q -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" sybase@$VIPHostName hostname` ]; then 
				sudo pcs resource move $RGName $Host --wait=60 > /dev/null  2>&1
				sudo pcs resource cleanup $RGName > /dev/null  2>&1
			fi
			#ssh -o StrictHostKeyChecking=no sybase@$Host >> $LOGFILE
			echo ${LS_Name[$i]}
			IP=`ping -c 1 $(read_line $i 1) | egrep PING | awk {'print $3'}|sed 's/(//g;s/)//g'`
			echo $IP
			port=$(read_line $i 2)
			echo $port
			echo -e "$(TimeStamp) Trying to start logical server $i to listen on $j" >> $LOGFILE
			dbisql -c dsn=$j -onerror exit "sp_start_listener 'tcpip','$IP:$port'" >> $LOGFILE
			if [ $? != 0 ];then dbisql -c dsn=$j -onerror exit "sp_stop_listener 'tcpip','$IP:$port'" > /dev/null; fi
			nc -zv ${LS_Name[$i]} > /dev/null 2>&1
			if [ $? == 0 ];then 
				echo -e "$(TimeStamp) $i is started and now listening to $j" >> $LOGFILE
				#mail -s "$i Listener Restarted" -r dbasupport@sinch.com DI.DBS.DBA.Support@sinch.com <<< "$i listener started and now listening to $j"
				break
			else
				continue
			fi
		fi
	done
}

while [ 1 == 1 ]
do
	eval declare -A LS_Name=( $(awk 'BEGIN{RS="";FS"\n"} {a1=$1;a2=$2;a3=$3;print $1 "=\"" $2" " $3"\" "}' $FILENAME |tr -d '\n'))
	for i in "${!LS_Name[@]}"
	do
		LOGFILE=/opt/sybase/scripts/log/${IQSERVER}_listener_check-`date +'%Y%m%d'`
		if [ "`echo $i|grep RLV`" = "$i" ]; then
			logical_server=$CORD
		else
			logical_server=$(dbisql -c dsn=$ACT_NODE -nogui "select server_name from sysiqlsmembers where ls_name='$i'"|grep $IQSERVER|xargs)
		fi
		nc -zv ${LS_Name[$i]} > /dev/null 2>&1
		if [ $? == 0 ]; then
			ls_members=$logical_server
			everythinglooksfine >> $LOGFILE
		else
			LS=$logical_server
			startlistener >> $LOGFILE
		fi
	done
	sleep 30
done
